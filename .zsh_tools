# About: Install tooling which is used in ZSH


####################################################################################################
# ZInit Package Manager
####################################################################################################
# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
    mkdir -p "$(dirname $ZINIT_HOME)"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"


####################################################################################################
# FZF (Fuzzy Finder Integration)
####################################################################################################
if [[ ! -f ~/.fzf.zsh ]]; then
    echo "Installing Fzf"
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
fi
source ~/.fzf.zsh

# Install 'fd' a better find
if ! command -v fdfind 2>&1 > /dev/null; then
    echo "Installing fd (through the fd-find pacakge)"
    sudo apt install fd-find
fi

if [ ! -f ~/.local/bin/fd ]; then
    echo "Linking fd to fdfind"
    ln -s $(command -v fdfind) ~/.local/bin/fd
fi

# Use fd for listing FZF path candidates
_fzf_compgen_path () {
    fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir () {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}


####################################################################################################
# ZOxide (Better CD)
####################################################################################################

if [ ! -f ~/.local/bin/zoxide ]; then
    pushd ~/.local
    echo "Installing ZOxide"
    curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
    popd
fi

eval "$(zoxide init --cmd cd zsh)"


####################################################################################################
# TMUX
####################################################################################################

if [ ! -f $HOME/.local/bin/tmux ]; then
    pushd ~/.local
    echo "Installing TMux"
    curl -s https://api.github.com/repos/nelsonenzo/tmux-appimage/releases/latest \
        | grep "browser_download_url.*appimage" \
        | cut -d : -f 2,3 \
        | tr -d \" \
        | wget -qi -

    mv tmux.appimage bin/tmux
    chmod +x bin/tmux
    popd
fi

###################################################################################################
# NVM (NodeJS and NPM)
####################################################################################################

export NVM_DIR="${XDG_DATA_HOME:-${HOME}}/.nvm"
if [ ! -d $NVM_DIR ]; then
    echo "Installing NVM, Node, and NPM ($NVM_DIR)"
    git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
    pushd "$NVM_DIR"
    git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
    popd
    source $NVM_DIR/nvm.sh
    nvm install 22
fi

[ -s "$NVM_DIR/nvm.sh" ] && source $NVM_DIR/nvm.sh  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && source $NVM_DIR/bash_completion  # This loads nvm bash_completion
nvm use node > /dev/null

